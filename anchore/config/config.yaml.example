# Anchore Service Configuration File
#
# NOTE: The default location for this configuration file should be
# /config/config.yaml from within the container running anchore-engine
#

#
# ===Global Section===
#
# Uncomment and set this parameter to a writeable location for
# anchore-engine to store transient configuration metadata and state
# files
#
# service_dir: '/root/.anchore_engine'
#
# Uncomment and set this parameter to a writeable location for
# anchore-engine to use as a large temporary workspace for image
# analysis (analyzer service)
#
# tmp_dir: '/tmp'
#
# Log levels options are FATAL, ERROR, WARN, INFO and DEBUG
#
# log_level: 'INFO'
#
# Uncomment and set to a value that is specific to each running
# instance of an anchore-engine service.  By default if left commented
# out, host_id is set randomly
#
# host_id: 'unique_host_id_string_override'
#
# Uncomment and set to False if you have enabled TLS for any internal
# service (catalog, policy_engine, simplequeue, analyzer, etc), and
# are using a self-signed certificate
#
# internal_ssl_verify: True
#
# Uncomment to tune the amount of time the system will tolerate an
# image remaining in 'analyzing' state, before retrying
#
# image_analyze_timeout_seconds: '36000'
#
# Set auto_restart_services to False to prevent the anchore-engine
# bootstrap script from automatically restarting services if they
# crash unexpectedly
#
auto_restart_services: True
#
# Uncomment and set to True if you wish to allow anchore-engine to use
# IAM/instance Roles to access ECR registries (allow the awsecr
# registry type)
#
# allow_awsecr_iam_auto: False
#
cleanup_images: True
#
# Uncomment if you would like to enable prometheus metrics routes in
# anchore-engine (enables metric gathering and /metrics route for all
# services)
#
#metrics: 
#  enabled: True
#

# ===Feeds Section===
#
# A feeds section is available for override, but shouldn't be
# needed. By default, the 'admin' credentials are used if present,
# otherwise anonymous access for feed sync is used
# 
#feeds:
#  selective_sync:
#    # If enabled only sync specific feeds instead of all.
#    enabled: True
#    feeds:
#      vulnerabilities: True
#      # Warning: enabling the packages and nvd sync causes the service to require much more memory to do process the significant data volume. We recommend at least 4GB available for the container
#      packages: False
#      nvd: False
#  anonymous_user_username: anon@ancho.re
#  anonymous_user_password: pbiU2RYZ2XrmYQ
#  url: 'https://ancho.re/v1/service/feeds'
#  client_url: 'https://ancho.re/v1/account/users'
#  token_url: 'https://ancho.re/oauth/token'
#  connection_timeout_seconds: 3
#  read_timeout_seconds: 60

#
# ===Anchore Engine Users/Credentials Section===
#
credentials:
  users:
     admin:
       password: 'foobar'
       email: 'me@foobar.com'
       #auto_policy_sync: True
       external_service_auths:
         anchoreio:
           anchorecli:
             auth: '<anchoreiouser>:<anchoreiopw>'
  database:
    db_connect: 'postgresql+pg8000://<postgresuser>:<mysecretpassword>@<postgreshostIP>:<postgreshostport>/postgres'
    db_connect_args:
      timeout: 120
      ssl: False
    db_pool_size: 30
    db_pool_max_overflow: 100

#
# ===Webhooks Section===
#
# Uncomment this section if you have installed and are running a
# webhook consumer that can accept webhook notification events from
# anchore-engine
#
# NOTE: any top-level webhook param can be overriden within each
# specific webhook section for URLs, the following variables will be
# filled in by anchore when constructing the final webhook URL:
# <userId>
#
#webhooks:
#  webhook_user: '<webhookuser>'
#  webhook_pass: '<webhookpass>'
#  ssl_verify: False
#  # notification_retry_timeout: 30
#
#  # url must contain <notification_type> which will be filled in by anchore
#  general:
#    url: 'http://localhost:8080/<notification_type>/'
#    #url: 'http://localhost:8080/<notification_type>/<userId>'
#
##  # specific notification type overrides here (will override 'general' for specified type)
##  policy_eval:
##    url: 'http://localhost:8080/policy_eval/'
##    #url: 'http://localhost:8080/policy_eval/<userId>'
##  tag_update:
##    url: 'http://localhost:8080/tag_update/'
##    #url: 'http://localhost:8080/tag_update/<userId>'

#
# ===Services Section===
#
# Service specific configuration.  Each service configured with
# 'enabled: True' will be started up when the anchore-engine container
# starts.  Required services are apiext, catalog, policy_engine,
# simplequeue, and analyzer.  The kubernetes_webhook is optional,
# needed only if you're using kubernetes image admission controller
# functionality.
#
services:
  apiext:
    enabled: True
    require_auth: True
    endpoint_hostname: 'localhost'
    listen: '0.0.0.0'
    port: 8228
    # NOTE: use the below to enable TLS for this service
    #ssl_enable: True
    #ssl_cert: '/config/test.crt'
    #ssl_key: '/config/test.key'
    #ssl_chain: '/config/chain.crt'
  catalog:
    enabled: True
    require_auth: True
    endpoint_hostname: 'localhost'
    listen: '0.0.0.0'
    port: 8082
    # NOTE: use the below external_* parameters to define the port/tls
    # setting that will allow other internal services to access this
    # service - if left unset services will use the above,
    # e.g. http://<endpoint_hostname>:<port>.  If set, services will
    # use the below, e.g. https://<endpoint_hostname>:<external_port>
    #external_port: 8082
    #external_tls: False
    #ssl_enable: True
    #ssl_cert: '/config/test.crt'
    #ssl_key: '/config/test.key'
    #ssl_chain: '/config/chain.crt'
    archive:
      compression:
        enabled: False
        min_size_kbytes: 100
      storage_driver:
        name: db
        config: {}
    cycle_timer_seconds: 1
    # NOTE: the below can be configured to tune th frequency at which
    # the catalog async functions run
    #cycle_timers:
    #  image_watcher: 600
    #  policy_eval: 300
    #  analyzer_queue: 5
    #  notifications: 10
    #  vulnerability_scan: 300
    #  service_watcher: 300
    #  policy_bundle_sync: 3600
    #  repo_watcher: 60
  simplequeue:
    enabled: True
    require_auth: True
    endpoint_hostname: 'localhost'
    listen: '0.0.0.0'
    port: 8083
    #external_port: 8083
    #external_tls: False
    #ssl_enable: True
    #ssl_cert: '/config/test.crt'
    #ssl_key: '/config/test.key'
    #ssl_chain: '/config/chain.crt'
  analyzer:
    enabled: True
    require_auth: True
    cycle_timer_seconds: 1
    endpoint_hostname: 'localhost'
    listen: '0.0.0.0'
    port: 8084
    #external_port: 8084
    #external_tls: False
    #ssl_enable: True
    #ssl_cert: '/config/test.crt'
    #ssl_key: '/config/test.key'
    #ssl_chain: '/config/chain.crt'
    #max_threads: 1
  kubernetes_webhook:
    enabled: True
    require_auth: True
    endpoint_hostname: 'localhost'
    listen: '0.0.0.0'
    port: 8338
    #ssl_enable: True
    #ssl_cert: '/config/test.crt'
    #ssl_key: '/config/test.key'
    #ssl_chain: '/config/chain.crt'
  policy_engine:
    enabled: True
    require_auth: True
    endpoint_hostname: 'localhost'
    listen: '0.0.0.0'
    port: 8087
    #external_port: 8087
    #external_tls: False
    #ssl_enable: True
    #ssl_cert: '/config/test.crt'
    #ssl_key: '/config/test.key'
    #ssl_chain: '/config/chain.crt'
